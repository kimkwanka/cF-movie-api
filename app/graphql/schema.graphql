  scalar Date
  scalar ObjectId
  
  type User {
    _id: ObjectId!
    birthday: String
    email: String!
    favoriteMovies: [String]!
    passwordHash: String!
    username: String!
  }

  input UserInput {
    birthday: String
    email: String!
    favoriteMovies: [String]
    password: String!
    username: String!
  }

  type Error {
    message: String!    
  }

  type AuthPayload {
    jwtToken: String
    statusCode: Int!
    user: User
    errors: [Error]!
  }

  type UserPayload {
    statusCode: Int!
    user: User
    errors: [Error]!
  }

  type RefreshTokenData {
    refreshToken: String!
    expiresAt: Date!
    userId: String!
    passwordHash: String!
  }

  type TMDBConfiguration {
    base_url: String!
    secure_base_url: String!
    backdrop_sizes: [String!]!
    logo_sizes: [String!]!
    poster_sizes: [String!]!
    profile_sizes: [String!]!
    still_sizes: [String!]!
  }

  type TmdbImageBaseUrls {
    posterBaseUrl: String!
    profileBaseUrl: String!
    backdropBaseUrl: String!
  }

  type TMDBMovieSimple {
    adult: Boolean!
    backdrop_path: String!
    backdropUrl: String
    genre_ids: [String!]!
    genres: [TMDBGenre!]!
    id: ID!
    original_language: Boolean!
    original_title: String!
    overview: String!
    popularity: Float!
    poster_path: String!
    posterUrl: String
    release_date: String!
    title: String!
    video: Boolean!
    vote_average: Float!
    vote_count: Int!
  }

  type TMDBProductionCompany {
    name: String!
    id: Int!
    logo_path: String
    origin_country: String!
  }

  type TMDBProductionCountry {
    iso_3166_1: String!
    name: String!
  }

  type TMDBProductionSpokenLanguaeges {
    iso_639_1: String!
    name: String!
  }

  type TMDBGenre {
    id: Int!
    name: String!
  }

  type TMDBMovieDetailed {
    adult: Boolean!
    backdrop_path: String
    backdropUrl: String
    budget: Int!
    genres: [TMDBGenre!]!
    homepage: String
    id: String!
    imdb_id: String
    original_language: Boolean!
    original_title: String!
    overview: String
    popularity: Float!
    poster_path: String
    posterUrl: String
    production_companies: [TMDBProductionCompany!]!
    production_countries: [TMDBProductionCountry!]!
    release_date: String!
    revenue: Int!
    runtime: Int
    spoken_languages: [TMDBProductionSpokenLanguaeges!]!
    status: String!
    tagline: String
    title: String!
    video: Boolean!
    vote_average: Float!
    vote_count: Int!
  }

  input DiscoverOptions {
    page: Int
    with_genres: String
    without_genres: String
    with_cast: String
    with_crew: String
    with_people: String
    with_keywords: String
    without_keywords: String
    with_watch_providers: String
    with_watch_monetization_types: String
  }

  type MoviesPayload {
    movies: [TMDBMovieSimple]!
    totalPages: Int!
    totalResults: Int!
  }

  type Query {
    discover(options: DiscoverOptions!): MoviesPayload
    movie(movieId: String!): TMDBMovieDetailed
    search(query: String!, page: Int): MoviesPayload
    users: [User]
  }

  type Mutation {
    registerUser(newUserData: UserInput!): UserPayload
    loginUser(username: String!, password: String!): AuthPayload
    logoutUser: UserPayload
    silentRefresh: AuthPayload
    updateUser(userId: ID!, newUserData: UserInput!): UserPayload
    deleteUser(userId: ID!): UserPayload
    addFavoriteMovieToUser(userId: ID!, movieId: ID!): UserPayload
    removeFavoriteMovieFromUser(userId: ID!, movieId: ID!): UserPayload
  }